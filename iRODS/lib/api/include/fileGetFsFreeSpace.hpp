/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileGetFsFreeSpace.h - This file may be generated by a program or script
 */

#ifndef FILE_GET_FS_FREESPACE_HPP
#define FILE_GET_FS_FREESPACE_HPP

/* This is a low level file type API call */

#include "rods.hpp"
#include "rcMisc.hpp"
#include "procApiRequest.hpp"
#include "apiNumber.hpp"

typedef struct {
    rodsHostAddr_t addr;
    char fileName[MAX_NAME_LEN];
    char rescHier[MAX_NAME_LEN];
    char objPath[MAX_NAME_LEN];
    int flag;
} fileGetFsFreeSpaceInp_t;

typedef struct {
    rodsLong_t size;
} fileGetFsFreeSpaceOut_t;

#define fileGetFsFreeSpaceInp_PI "struct RHostAddr_PI; str fileName[MAX_NAME_LEN]; str rescHier[MAX_NAME_LEN]; str objPath[MAX_NAME_LEN]; int flag;"

#define fileGetFsFreeSpaceOut_PI "double size;"

#if defined(RODS_SERVER)
#define RS_FILE_GET_FS_FREE_SPACE rsFileGetFsFreeSpace
/* prototype for the server handler */
int
rsFileGetFsFreeSpace( rsComm_t *rsComm,
                      fileGetFsFreeSpaceInp_t *fileGetFsFreeSpaceInp,
                      fileGetFsFreeSpaceOut_t **fileGetFsFreeSpaceOut );
int
_rsFileGetFsFreeSpace( rsComm_t *rsComm,
                       fileGetFsFreeSpaceInp_t *fileGetFsFreeSpaceInp,
                       fileGetFsFreeSpaceOut_t **fileGetFsFreeSpaceOut );
int
remoteFileGetFsFreeSpace( rsComm_t *rsComm,
                          fileGetFsFreeSpaceInp_t *fileGetFsFreeSpaceInp,
                          fileGetFsFreeSpaceOut_t **fileGetFsFreeSpaceOut,
                          rodsServerHost_t *rodsServerHost );
#else
#define RS_FILE_GET_FS_FREE_SPACE NULL
#endif

/* prototype for the client call */
#ifdef __cplusplus
extern "C" {
#endif
int
rcFileGetFsFreeSpace( rcComm_t *conn,
                      fileGetFsFreeSpaceInp_t *fileGetFsFreeSpaceInp,
                      fileGetFsFreeSpaceOut_t **fileGetFsFreeSpaceOut );

#ifdef __cplusplus
}
#endif
#endif  /* FILE_GET_FS_FREESPACE_H */
