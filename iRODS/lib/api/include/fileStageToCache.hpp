/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileStageToCache.h - This file may be generated by a program or script
 */

#ifndef FILE_STAGE_TO_CACHE_HPP
#define FILE_STAGE_TO_CACHE_HPP

/* This is a Object File I/O call */

#include "rods.hpp"
#include "rcMisc.hpp"
#include "procApiRequest.hpp"
#include "apiNumber.hpp"



typedef struct {
    int mode;
    int flags;
    rodsLong_t dataSize;
    rodsHostAddr_t addr;
    char filename[MAX_NAME_LEN];
    char cacheFilename[MAX_NAME_LEN];
    char objPath[MAX_NAME_LEN];
    char rescHier[MAX_NAME_LEN];
    keyValPair_t condInput;
} fileStageSyncInp_t;

#define fileStageSyncInp_PI "int mode; int flags; double dataSize; struct RHostAddr_PI; str filename[MAX_NAME_LEN]; str cacheFilename[MAX_NAME_LEN]; str objPath[MAX_NAME_LEN]; str rescHier[MAX_NAME_LEN]; struct KeyValPair_PI;"

typedef struct {
    char file_name[ MAX_NAME_LEN ];
} fileSyncOut_t;

#define fileSyncOut_PI "str file_name[MAX_NAME_LEN];"


#if defined(RODS_SERVER)
#define RS_FILE_STAGE_TO_CACHE rsFileStageToCache
/* prototype for the server handler */
int
rsFileStageToCache( rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp );
int
rsFileStageToCacheByHost( rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp,
                          rodsServerHost_t *rodsServerHost );
int
_rsFileStageToCache( rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp );
int
remoteFileStageToCache( rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp,
                        rodsServerHost_t *rodsServerHost );
#else
#define RS_FILE_STAGE_TO_CACHE NULL
#endif

/* prototype for the client call */
#ifdef __cplusplus
extern "C" {
#endif
int
rcFileStageToCache( rcComm_t *conn, fileStageSyncInp_t *fileStageToCacheInp );
#ifdef __cplusplus
}
#endif

#endif	/* FILE_STAGE_TO_CACHE_H */
