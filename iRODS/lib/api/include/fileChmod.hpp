/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileChmod.h - This file may be generated by a program or script
 */

#ifndef FILE_CHMOD_HPP
#define FILE_CHMOD_HPP

/* This is a low level file type API call */

#include "rods.hpp"
#include "rcMisc.hpp"
#include "procApiRequest.hpp"
#include "apiNumber.hpp"

typedef struct {
    rodsHostAddr_t addr;
    char fileName[MAX_NAME_LEN];
    int mode;
    char rescHier[MAX_NAME_LEN];
    char objPath[MAX_NAME_LEN];
} fileChmodInp_t;

#define fileChmodInp_PI "struct RHostAddr_PI; str fileName[MAX_NAME_LEN]; int mode; str rescHier[MAX_NAME_LEN]; str objPath[MAX_NAME_LEN];"

#if defined(RODS_SERVER)
#define RS_FILE_CHMOD rsFileChmod
/* prototype for the server handler */
int
rsFileChmod( rsComm_t *rsComm, fileChmodInp_t *fileChmodInp );
int
_rsFileChmod( rsComm_t *rsComm, fileChmodInp_t *fileChmodInp );
int
remoteFileChmod( rsComm_t *rsComm, fileChmodInp_t *fileChmodInp,
                 rodsServerHost_t *rodsServerHost );
#else
#define RS_FILE_CHMOD NULL
#endif

/* prototype for the client call */
#ifdef __cplusplus
extern "C" {
#endif
int
rcFileChmod( rcComm_t *conn, fileChmodInp_t *fileChmodInp );
#ifdef __cplusplus
}
#endif

#endif	/* FILE_CHMOD_H */
